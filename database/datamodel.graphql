type User {
  id: ID! @unique
  phone: String! @unique
  name: String
  # country: String!
  # language: String!
  # currency: String!

  accounts: [Account!]! @relation(name: "AccountsByUser", onDelete: CASCADE)
  financeOperations: [FinanceOperationRaw!]! @relation(name: "FinanceOperationsByUser", onDelete: CASCADE)
  incomeCategories: [IncomeCategory!]! @relation(name: "IncomeCategoriesByUser", onDelete: CASCADE)
  expenseCategories: [ExpenseCategory!]! @relation(name: "ExpenseCategoriesByUser", onDelete: CASCADE)
}

type Account {
  id: ID! @unique
  name: String!
  balance: Float! @default(value: 0)

  owner: User! @relation(name: "AccountsByUser")
  financeOperations: [FinanceOperationRaw!]! @relation(name: "FinanceOperationsByAccount", onDelete: CASCADE)
}

type FinanceOperationRaw {
  id: ID! @unique
  amount: Float!
  date: DateTime!
  comment: String

  owner: User! @relation(name: "FinanceOperationsByUser")
  account: Account! @relation(name: "FinanceOperationsByAccount")

  # custom fields: Expense
  expense_payee: String
  expense_category: ExpenseCategory
  # custom fields: Income
  income_place: String
  income_category: IncomeCategory
  #custom fields: Transfer
  transfer_toAccount: Account @relation(name: "TransferToAccount")
}

type IncomeCategory {
  id: ID! @unique
  name: String!
  mandatory: Boolean! @default(value: "false")

  owner: User @relation(name: "IncomeCategoriesByUser")
}

type ExpenseCategory {
  id: ID! @unique
  name: String!
  mandatory: Boolean! @default(value: "false")

  owner: User @relation(name: "ExpenseCategoriesByUser")
}
