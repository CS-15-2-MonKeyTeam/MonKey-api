type User {
  id: ID! @unique
  phone: String! @unique
  name: String
  # country: String!
  # language: String!
  # currency: String!

  accounts: [Account!]! @relation(name: "AccountsByUser", onDelete: CASCADE)
  financeOperations: [FinanceOperation!]! @relation(name: "FinanceOperationsByUser", onDelete: CASCADE)
  incomeCategories: [IncomeCategory!]! @relation(name: "IncomeCategoriesByUser", onDelete: CASCADE)
  expenseCategories: [ExpenseCategory!]! @relation(name: "ExpenseCategoriesByUser", onDelete: CASCADE)
}

type Account {
  id: ID! @unique
  name: String!
  balance: Float! @default(value: 0)

  owner: User! @relation(name: "AccountsByUser")
  financeOperations: [FinanceOperation!]! @relation(name: "FinanceOperationsByAccount", onDelete: CASCADE)
}

type FinanceOperation {
  id: ID! @unique
  amount: Float!
  date: DateTime!
  comment: String

  createdBy: User! @relation(name: "FinanceOperationsByUser")
  account: Account! @relation(name: "FinanceOperationsByAccount")
  expense: Expense @relation(name: "ExpenseFinanceOperation", onDelete: CASCADE)
  income: Income @relation(name: "IncomeFinanceOperation", onDelete: CASCADE)
  transfer: Transfer @relation(name: "TransferFinanceOperation", onDelete: CASCADE)
}

type Expense {
  id: ID! @unique
  payee: String!

  financeOperation: FinanceOperation! @relation(name: "ExpenseFinanceOperation")
  category: ExpenseCategory
}

type Income {
  id: ID! @unique
  place: String!

  financeOperation: FinanceOperation! @relation(name: "IncomeFinanceOperation")
  category: IncomeCategory
}

type Transfer {
  id: ID! @unique

  financeOperation: FinanceOperation! @relation(name: "TransferFinanceOperation")
  toAccount: Account!
}

type IncomeCategory {
  id: ID! @unique
  name: String!

  createdBy: User @relation(name: "IncomeCategoriesByUser")
}

type ExpenseCategory {
  id: ID! @unique
  name: String!

  createdBy: User @relation(name: "ExpenseCategoriesByUser")
}
